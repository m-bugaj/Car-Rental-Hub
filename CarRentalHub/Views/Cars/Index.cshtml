@model Tuple<IEnumerable<CarRentalHub.Models.Car>, IEnumerable<CarRentalHub.Models.Photo>>

@{
    ViewData["Title"] = "Index";
}

@if (ViewBag.FilterParameters != null)
{


    <style>
        body {
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }

        .background-bar {
            background: linear-gradient(to right, #3498db, #2980b9);
            width: 100vw;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 0;
        }

        .hero-section {
            color: #fff;
            padding: 50px 10px;
            border-radius: 20px;
            text-align: center;
            margin-top: -90px;
            margin-bottom: -30px;
            margin-left: 10px;
            margin-right: 10px;
            position: relative;
            transform: scale(0.8);
            z-index: 1;
        }

        .custom-button {
            font-size: 1.3rem;
            font-weight: 300;
            padding: 12px 25px;
            background-color: #ffffff;
            color: #000000;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease-in-out;
        }

            .custom-button:hover {
                background-color: #1a1a1a;
                color: #ffffff;
            }

        .form-title {
            font-size: 1.8rem;
            margin-bottom: 15px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .logo-container {
            position: relative;
            margin-bottom: 0px;
        }

        .logo {
            max-width: 10%;
            max-height: 10%;
            display: inline-block;
            vertical-align: middle;
        }

        .search-container {
            display: flex;
            align-items: center;
            margin-top: 20px;
        }

        .search-input {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px 0 0 5px;
            font-size: 16px;
        }

        .search-btn {
            padding: 10px 15px;
            border: none;
            border-radius: 0 5px 5px 0;
            background-color: #1a1a1a;
            color: #ffffff;
            cursor: pointer;
            font-size: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .search-icon {
            font-size: 18px;
            margin-right: 5px;
        }
    </style>

    <div class="background-bar" id="backgroundBar"></div>
    <div class="hero-section">

        <div class="logo-container">
            <img src="~/Logo/Car.png" alt="Car Logo" class="logo" />
        </div>

        <div class="container text-center">

            <h2 class="text-center mb-5 display-4 mb">Znajdź swój samochód!</h2>

            <form asp-controller="Cars" asp-action="Index" method="get">

                <div class="row">
                    <!-- Pierwszy rząd -->
                    <div class="col-md-4 mb-3">
                        <label for="selectedMarka" class="form-label">Marka pojazdu:</label>
                        <select id="selectedMarka" name="selectedMarka" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Wybierz markę</option>

                            @if (ViewBag.DostepneMarki != null)
                            {
                                foreach (var marka in ViewBag.DostepneMarki)
                                {
                                    <option value="@marka.Value" selected="@(marka.Value == ViewBag.FilterParameters?.SelectedMarka)">
                                        @marka.Text
                                    </option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-4 mb-3">
                        <label for="selectedModel" class="form-label">Model pojazdu:</label>
                        <select id="selectedModel" name="selectedModel" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Wybierz model</option>

                            @if (ViewBag.DostepneModele != null)
                            {
                                foreach (var modelcar in ViewBag.DostepneModele)
                                {
                                    <option value="@modelcar" selected="@(modelcar == ViewBag.FilterParameters?.SelectedModel)">
                                        @modelcar
                                    </option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-4 mb-3">
                        <label for="selectedGeneration" class="form-label">Generacja:</label>
                        <select id="selectedGeneration" name="selectedGeneration" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Wybierz generację</option>

                            @if (ViewBag.AvailableGenerations != null)
                            {
                                foreach (var generation in ViewBag.AvailableGenerations)
                                {
                                    <option value="@generation" selected="@(generation == ViewBag.FilterParameters?.SelectedGeneration)">
                                        @generation
                                    </option>
                                }
                            }
                        </select>
                    </div>

                    <!-- Drugi rząd -->
                    <div class="col-md-4 mb-3">
                        <!-- <label for="selectedYearFrom" class="form-label">Rok produkcji od:</label> -->
                        <select id="selectedYearFrom" name="selectedYearFrom" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Rok produkcji od</option>
                            @foreach (var year in ViewBag.AvailableYears)
                            {
                                <option value="@year" selected="@(year == ViewBag.FilterParameters?.SelectedYearFrom)">@year</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-4 mb-3">
                        <!-- <label for="selectedYearTo" class="form-label">Rok produkcji do:</label> -->
                        <select id="selectedYearTo" name="selectedYearTo" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Rok produkcji do</option>
                            @foreach (var year in ViewBag.AvailableYears)
                            {
                                <option value="@year" selected="@(year == ViewBag.FilterParameters?.SelectedYearTo)">@year</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-4 mb-3">
                        <!-- <label for="selectedBodyType" class="form-label">Typ nadwozia:</label> -->
                        <select id="selectedBodyType" name="selectedBodyType" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Typ nadwozia</option>
                            @foreach (var bodyType in ViewBag.BodyType)
                            {
                                <option value="@bodyType" selected="@(bodyType == ViewBag.FilterParameters?.SelectedBodyType)">@bodyType</option>
                            }
                        </select>
                    </div>


                    <!-- Trzeci rząd -->
                    <div class="col-md-4 mb-3">
                        <!-- <label for="selectedFuelType" class="form-label">Typ paliwa:</label> -->
                        <select id="selectedFuelType" name="selectedFuelType" class="form-control custom-select" style="height: 60px;">
                            <option value="" selected>Typ paliwa</option>
                            @foreach (var fuelType in ViewBag.FuelType)
                            {
                                <option value="@fuelType" selected="@(fuelType == ViewBag.FilterParameters?.SelectedFuelType)">@fuelType</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-4 mb-3">
                        <!-- <label for="MileageFrom" class="form-label">Przebieg od: (km)</label> -->
                        <input id="MileageFrom" name="MileageFrom" class="form-control custom-select" style="height: 60px;" placeholder="Przebieg od (km)" value="@ViewBag.FilterParameters?.MileageFrom">
                    </div>

                    <div class="col-md-4 mb-3">
                        <!-- <label for="MileageTo" class="form-label">Przebieg do: (km)</label> -->
                        <input id="MileageTo" name="MileageTo" class="form-control custom-select" style="height: 60px;" placeholder="Przebieg do (km)" value="@ViewBag.FilterParameters?.MileageTo">
                    </div>

                    <!-- Czwarty rząd -->
                    <div class="col-md-4 mb-3">
                        <!-- <label for="PriceFrom" class="form-label">Cena od: (PLN)</label> -->
                        <input id="PriceFrom" name="PriceFrom" class="form-control custom-select" style="height: 60px;" placeholder="Cena od (PLN)" value="@ViewBag.FilterParameters?.PriceFrom">
                    </div>

                    <div class="col-md-4 mb-3">
                        <!-- <label for="PriceTo" class="form-label">Cena do: (PLN)</label> -->
                        <input id="PriceTo" name="PriceTo" class="form-control custom-select" style="height: 60px;" placeholder="Cena do (PLN)" value="@ViewBag.FilterParameters?.PriceTo">
                    </div>


                    <!-- Przycisk Szukaj -->
                    <div class="col-md-4 mb-3" style="display: flex;">
                        <input type="text" class="form-control custom-select" style="width: 75%; height: 60px;" placeholder="Wyszukaj...">
                        <button type="submit" class="search-btn" style="width: 25%; height: 60px;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search search-icon" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                            </svg>
                        </button>
                    </div>


                </div>
            </form>


        </div>

    </div>



    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


    <script>
        $(document).ready(function () {
            // Obsługa zdarzenia zmiany wyboru dla selectedMarka
            $('#selectedMarka').change(function () {
                // Pobierz wartość wybranej marki
                var selectedMarka = $(this).val();

                // Jeśli wybrano markę, usuń domyślną opcję
                if (selectedMarka) {
                    $('#selectedMarka option[value=""]').remove();
                }

                // Wywołaj akcję w kontrolerze, aby uzyskać modele dla danej marki
                $.getJSON('/FilterData/PobierzModele', { marka: selectedMarka }, function (data) {
                    // Wyczyść istniejące opcje w selectedModel
                    $('#selectedModel').empty();

                    // Dodaj domyślną opcję do selectedModel
                    $('#selectedModel').append($('<option>', {
                        value: '',
                        text: 'Wybierz model'
                    }));

                    // Dodaj nowe opcje do selectedModel
                    $.each(data, function (index, model) {
                        $('#selectedModel').append($('<option>', {
                            value: model,
                            text: model
                        }));
                    });

                    // Pobierz wartość modelu z zapytania GET
                    var selectedModelFromUrl = getParameterByName('selectedModel');

                    // Jeśli wartość modelu jest dostępna, ustaw ją jako wybraną wartość
                    if (selectedModelFromUrl) {
                        $('#selectedModel').val(selectedModelFromUrl);
                    }

                    // Wywołaj zdarzenie zmiany dla selectedModel
                    $('#selectedModel').change();
                });
            });

            // Obsługa zdarzenia zmiany wyboru dla selectedModel
            $('#selectedModel').change(function () {
                // Pobierz wartość wybranego modelu
                var selectedModel = $(this).val();

                // Jeśli wybrano model, usuń domyślną opcję
                if (selectedModel) {
                    $('#selectedModel option[value=""]').remove();
                }

                // Wywołaj akcję w kontrolerze, aby uzyskać generacje dla danego modelu
                $.getJSON('/FilterData/GetGeneration', { carModel: selectedModel }, function (data) {
                    // Wyczyść istniejące opcje w selectedGeneration
                    $('#selectedGeneration').empty();

                    // Dodaj domyślną opcję do selectedGeneration
                    $('#selectedGeneration').append($('<option>', {
                        value: '',
                        text: 'Wybierz generację'
                    }));

                    // Dodaj nowe opcje do selectedGeneration
                    $.each(data, function (index, generation) {
                        $('#selectedGeneration').append($('<option>', {
                            value: generation,
                            text: generation
                        }));
                    });

                    // Pobierz wartość generacji z zapytania GET
                    var selectedGenerationFromUrl = getParameterByName('selectedGeneration');

                    // Jeśli wartość generacji jest dostępna, ustaw ją jako wybraną wartość
                    if (selectedGenerationFromUrl) {
                        $('#selectedGeneration').val(selectedGenerationFromUrl);
                    }
                });
            });

            // Wywołaj zdarzenie zmiany po załadowaniu strony, aby zainicjować dostępne modele
            $('#selectedMarka').change();

            // Funkcja do pobierania wartości parametru z zapytania GET
            function getParameterByName(name, url) {
                if (!url) url = window.location.href;
                name = name.replace(/[\[\]]/g, "\\$&");
                var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                    results = regex.exec(url);
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, " "));
            }
        });

    </script>

}


<style>
    .custom-thumbnail {
        width: 100%;
        height: 220px; /* dostosuj wysokość według potrzeb */
        object-fit: cover;
        border-radius: 8px; /* dostosuj zaokrąglenie rogów, mniejsze niż ramka ogłoszenia */
    }

    .card {
        border: 1px solid #e0e0e0; /* delikatna szara obramówka */
        background-color: #f8f9fa; /* jasne tło */
        border-radius: 10px;
    }

        .card:hover {
            border: 1px solid #007bff; /* zmiana obramówki po najechaniu myszką */
            transition: border-color 0.3s ease-in-out;
        }

    .card-title {
        color: #343a40; /* kolor tytułu ogłoszenia */
    }

    .card-text {
        color: #6c757d; /* kolor tekstu ogłoszenia */
    }

    .btn-primary {
        background-color: #007bff; /* kolor przycisku Details */
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3; /* zmiana koloru przycisku po najechaniu myszką */
            border-color: #0056b3;
        }

    .icon {
        margin-right: 5px;
        color: #6c757d; /* kolor ikon */
    }

    .card-text.small.text-muted {
        margin-bottom: 5px; /* Resetuje margines dolny dla tej klasy */
    }

</style>

<div class="container">
    <div class="row">
        @foreach (var item in Model.Item1)
        {
            <div class="col-md-4 mb-4">
                <a href="@Url.Action("Details", "Cars", new { id = item.ID })" class="text-decoration-none">
                    <div class="card">
                        @{
                            var mainPhoto = Model.Item2.FirstOrDefault(p => p.AdvertisementId == item.ID && p.IsMainPhoto);
                        }

                        @if (mainPhoto != null)
                        {
                            var index = mainPhoto.ImagePath.IndexOf("\\images\\", StringComparison.OrdinalIgnoreCase);
                            if (index != -1)
                            {
                                var relativeImagePath = mainPhoto.ImagePath.Substring(index).Replace("\\", "/");
                                <div class="image-container" style="padding: 15px;">
                                    <img src="@Html.Raw(relativeImagePath)" alt="@relativeImagePath" class="card-img-top custom-thumbnail mx-auto d-block" />
                                </div>
                            }
                            else
                            {
                                <p class="text-center mt-3">No main photo available for this advertisement.</p>
                            }
                        }
                        else
                        {
                            <p class="text-center mt-3">No main photo available for this advertisement.</p>
                        }

                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.VehicleBrand) @Html.DisplayFor(modelItem => item.CarModel)</h5>
                            <p class="card-text small text-muted mb-2">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar-check-fill" viewBox="0 0 16 16">
                                    <path d="M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2m-5.146-5.146-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708.708" />
                                </svg>
                                <i class="bi bi-calendar icon"></i> @Html.DisplayFor(modelItem => item.YearOfProduction)
                            </p>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <p class="card-text small text-muted">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-speedometer" viewBox="0 0 16 16">
                                        <path d="M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2M3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707M2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8m9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5m.754-4.246a.39.39 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.39.39 0 0 0-.029-.518z" />
                                        <path fill-rule="evenodd" d="M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.95 11.95 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0" />
                                    </svg>
                                    <i class="bi bi-speedometer icon"></i> @Html.DisplayFor(modelItem => item.Mileage) km
                                </p>
                                <p class="card-text small text-muted">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-fuel-pump-fill" viewBox="0 0 16 16">
                                        <path d="M1 2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v8a2 2 0 0 1 2 2v.5a.5.5 0 0 0 1 0V8h-.5a.5.5 0 0 1-.5-.5V4.375a.5.5 0 0 1 .5-.5h1.495c-.011-.476-.053-.894-.201-1.222a.97.97 0 0 0-.394-.458c-.184-.11-.464-.195-.9-.195a.5.5 0 0 1 0-1q.846-.002 1.412.336c.383.228.634.551.794.907.295.655.294 1.465.294 2.081V7.5a.5.5 0 0 1-.5.5H15v4.5a1.5 1.5 0 0 1-3 0V12a1 1 0 0 0-1-1v4h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1zm2.5 0a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5z" />
                                    </svg>     
                                    <i class="bi bi-droplet icon"></i> @Html.DisplayFor(modelItem => item.FuelType)
                                </p>
                                <p class="card-text small text-muted">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-car-front-fill" viewBox="0 0 16 16">
                                        <path d="M2.52 3.515A2.5 2.5 0 0 1 4.82 2h6.362c1 0 1.904.596 2.298 1.515l.792 1.848c.075.175.21.319.38.404.5.25.855.715.965 1.262l.335 1.679q.05.242.049.49v.413c0 .814-.39 1.543-1 1.997V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.338c-1.292.048-2.745.088-4 .088s-2.708-.04-4-.088V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.892c-.61-.454-1-1.183-1-1.997v-.413a2.5 2.5 0 0 1 .049-.49l.335-1.68c.11-.546.465-1.012.964-1.261a.8.8 0 0 0 .381-.404l.792-1.848ZM3 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2m10 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2M6 8a1 1 0 0 0 0 2h4a1 1 0 1 0 0-2zM2.906 5.189a.51.51 0 0 0 .497.731c.91-.073 3.35-.17 4.597-.17s3.688.097 4.597.17a.51.51 0 0 0 .497-.731l-.956-1.913A.5.5 0 0 0 11.691 3H4.309a.5.5 0 0 0-.447.276L2.906 5.19Z" />
                                    </svg>
                                    <i class="bi bi-car icon"></i> @Html.DisplayFor(modelItem => item.BodyType)
                                </p>
                            </div>
                            <p class="card-text"><strong>Cena za dobę:</strong> @Html.DisplayFor(modelItem => item.Price) PLN</p>
                            <a href="@Url.Action("Details", "Cars", new { id = item.ID })" class="btn btn-primary mt-3">Wypożycz!</a>
                        </div>
                    </div>       
                </a>
            </div>
        }
    </div>
</div>


<script>
    // JavaScript do uzależnienia wysokości background-bar od wysokości hero-section
    function updateBackgroundBarHeight() {
        var heroSectionHeight = document.querySelector('.hero-section').offsetHeight;
        var backgroundBar = document.getElementById('backgroundBar');
        var marginTop = 20; // Dostosuj margines górny według potrzeb
        var marginBottom = 20; // Dostosuj margines dolny według potrzeb

        // Ustaw wysokość background-bar z uwzględnieniem marginesów
        backgroundBar.style.height = heroSectionHeight-120 + marginTop + marginBottom + "px";
    }

    document.addEventListener("DOMContentLoaded", updateBackgroundBarHeight);

    // Dodaj listener na zmianę rozmiaru okna
    window.addEventListener("resize", updateBackgroundBarHeight);
</script>